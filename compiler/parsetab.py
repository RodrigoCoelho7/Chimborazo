
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND BOOLEANO CASO CONTRARIO DEVUELVE DIFERENTE ENCUANTO ENTER ENTERO ENTONCES ESCRIBIR EXP FALSO FIM FLOAT FUNCION HACER ID IGUAL INT LEER LISTA LN OR PARA REAL RESTO SI SIGUIENTE STR STRING VAR VERDADEROprg : declarations statementsdeclarations : decldeclarations : declarations decldecl : declVdecl : declFdecl : declLdeclV : VAR vari ':' tipovari : atribDvari : IDvari : vari ',' atribDvari : vari ',' IDtipo : ENTEROtipo : REALtipo : BOOLEANOtipo : STRatribD : ID '=' STRINGatribD : ID '=' VERDADEROatribD : ID '=' FALSOatribD : ID '=' expdeclL : LISTA ID '=' listalista : '[' ']'lista : '[' elementos ']'elementos : elementoelementos : elementos ',' elementoelemento : INTelemento : FLOATelemento : BOOLEANOelemento : STRINGelemento : IDelemento : listadeclF : FUNCION ID '(' parametros ')' ':' tipo declarations statements DEVUELVE return '.'parametros : parametros : ID ':' tipoparametros : parametros ',' ID ':' tiporeturn : INTreturn : IDreturn : FLOATreturn : VERDADEROreturn : FALSOstatements : statstatements : statements statstat : atrib ';'stat : conditionsstat : ciclosstat : writeatrib : ID '=' STRINGatrib : ID '=' VERDADEROatrib : ID '=' FALSOatrib : ID '=' expexp : exp '+' termoexp : exp '-' termoexp : termotermo : termo '*' fatortermo : termo '/' fatortermo : termo RESTO fatortermo : termo '^' fatortermo : termo '!' termo : EXP '(' fator ')'termo : LN '(' fator ')'termo : fatorfator : INTfator : VERDADEROfator : FALSOfator : FLOATfator : STRINGfator : IDfator : ID '(' content_params ')' fator : '(' exp ')'fator : castfator : readcontent_params : content_params : list_paramslist_params : explist_params : list_params ',' expconditions : SI expL ENTONCES statements endconditionendcondition : '.'endcondition : CASO CONTRARIO statements '.'expL : termoBexpL : expL OR termoBtermoB : fatorBtermoB : termoB AND fatorBfatorB : conditionfatorB : VERDADEROfatorB : FALSOfatorB : '(' expL ')'condition : exp op expop : '>'op : '<'op : IGUALop : DIFERENTEop : '>' IGUALop : '<' IGUALciclos : ENCUANTO expL HACER statements '.'ciclos : PARA expL SIGUIENTE atrib '.'ciclos : PARA expL SIGUIENTE atrib HACER statements '.'write : ESCRIBIR '(' exp ')' ';'write : ESCRIBIR '(' exp ',' FIM ':' exp ')' ';'read : LEER '(' exp ')'cast : tipocast '(' exp ')'tipocast : REALtipocast : ENTEROtipocast : STR"
    
_lr_action_items = {'VAR':([0,2,3,4,5,6,11,93,94,95,96,97,106,137,163,169,175,188,],[7,7,-2,-4,-5,-6,-3,-7,-12,-13,-14,-15,-20,-21,-22,7,7,-31,]),'FUNCION':([0,2,3,4,5,6,11,93,94,95,96,97,106,137,163,169,175,188,],[8,8,-2,-4,-5,-6,-3,-7,-12,-13,-14,-15,-20,-21,-22,8,8,-31,]),'LISTA':([0,2,3,4,5,6,11,93,94,95,96,97,106,137,163,169,175,188,],[9,9,-2,-4,-5,-6,-3,-7,-12,-13,-14,-15,-20,-21,-22,9,9,-31,]),'$end':([1,10,12,14,15,16,27,28,146,147,155,156,158,173,177,180,],[0,-1,-40,-43,-44,-45,-41,-42,-75,-76,-93,-94,-96,-95,-77,-97,]),'ID':([2,3,4,5,6,7,8,9,10,11,12,14,15,16,18,19,20,27,28,29,36,55,57,58,59,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,93,94,95,96,97,106,107,109,117,118,130,136,137,146,147,152,155,156,157,158,163,164,165,167,168,172,173,175,177,179,180,181,188,],[17,-2,-4,-5,-6,24,25,26,17,-3,-40,-43,-44,-45,45,45,45,-41,-42,45,45,45,99,45,104,45,17,45,45,45,45,45,-87,-88,-89,-90,45,45,45,45,45,45,45,45,45,17,17,-7,-12,-13,-14,-15,-20,144,17,-91,-92,17,162,-21,-75,-76,45,-93,-94,17,-96,-22,144,17,17,45,17,-95,17,-77,17,-97,182,-31,]),'SI':([2,3,4,5,6,10,11,12,14,15,16,27,28,66,88,93,94,95,96,97,106,109,130,137,146,147,155,156,157,158,163,165,167,172,173,175,177,179,180,188,],[18,-2,-4,-5,-6,18,-3,-40,-43,-44,-45,-41,-42,18,18,-7,-12,-13,-14,-15,-20,18,18,-21,-75,-76,-93,-94,18,-96,-22,18,18,18,-95,18,-77,18,-97,-31,]),'ENCUANTO':([2,3,4,5,6,10,11,12,14,15,16,27,28,66,88,93,94,95,96,97,106,109,130,137,146,147,155,156,157,158,163,165,167,172,173,175,177,179,180,188,],[19,-2,-4,-5,-6,19,-3,-40,-43,-44,-45,-41,-42,19,19,-7,-12,-13,-14,-15,-20,19,19,-21,-75,-76,-93,-94,19,-96,-22,19,19,19,-95,19,-77,19,-97,-31,]),'PARA':([2,3,4,5,6,10,11,12,14,15,16,27,28,66,88,93,94,95,96,97,106,109,130,137,146,147,155,156,157,158,163,165,167,172,173,175,177,179,180,188,],[20,-2,-4,-5,-6,20,-3,-40,-43,-44,-45,-41,-42,20,20,-7,-12,-13,-14,-15,-20,20,20,-21,-75,-76,-93,-94,20,-96,-22,20,20,20,-95,20,-77,20,-97,-31,]),'ESCRIBIR':([2,3,4,5,6,10,11,12,14,15,16,27,28,66,88,93,94,95,96,97,106,109,130,137,146,147,155,156,157,158,163,165,167,172,173,175,177,179,180,188,],[21,-2,-4,-5,-6,21,-3,-40,-43,-44,-45,-41,-42,21,21,-7,-12,-13,-14,-15,-20,21,21,-21,-75,-76,-93,-94,21,-96,-22,21,21,21,-95,21,-77,21,-97,-31,]),'.':([12,14,15,16,27,28,38,39,42,43,44,45,46,47,61,62,63,64,82,91,92,109,113,115,116,119,120,121,122,130,131,146,147,149,150,151,153,154,155,156,158,167,172,173,177,180,182,183,184,185,186,187,],[-40,-43,-44,-45,-41,-42,-52,-60,-61,-64,-65,-66,-69,-70,-46,-47,-48,-49,-57,-62,-63,147,-68,-50,-51,-53,-54,-55,-56,155,156,-75,-76,-58,-59,-67,-99,-98,-93,-94,-96,173,177,-95,-77,-97,-36,188,-35,-37,-38,-39,]),'CASO':([12,14,15,16,27,28,109,146,147,155,156,158,173,177,180,],[-40,-43,-44,-45,-41,-42,148,-75,-76,-93,-94,-96,-95,-77,-97,]),'DEVUELVE':([12,14,15,16,27,28,146,147,155,156,158,173,177,179,180,],[-40,-43,-44,-45,-41,-42,-75,-76,-93,-94,-96,-95,-77,181,-97,]),';':([13,38,39,42,43,44,45,46,47,61,62,63,64,82,91,92,113,115,116,119,120,121,122,132,149,150,151,153,154,178,],[28,-52,-60,-61,-64,-65,-66,-69,-70,-46,-47,-48,-49,-57,-62,-63,-68,-50,-51,-53,-54,-55,-56,158,-58,-59,-67,-99,-98,180,]),'=':([17,24,26,99,],[29,58,60,58,]),'VERDADERO':([18,19,20,29,36,55,58,65,67,68,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,117,118,152,168,181,],[34,34,34,62,34,91,101,91,34,34,91,91,91,-87,-88,-89,-90,91,91,91,91,91,91,91,91,91,-91,-92,91,91,186,]),'FALSO':([18,19,20,29,36,55,58,65,67,68,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,117,118,152,168,181,],[35,35,35,63,35,92,102,92,35,35,92,92,92,-87,-88,-89,-90,92,92,92,92,92,92,92,92,92,-91,-92,92,92,187,]),'(':([18,19,20,21,25,29,36,40,41,45,48,49,50,51,52,55,58,65,67,68,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,117,118,152,168,],[36,36,36,55,59,65,36,83,84,85,86,87,-100,-101,-102,65,65,65,36,36,65,65,65,-87,-88,-89,-90,65,65,65,65,65,65,65,65,65,-91,-92,65,65,]),'EXP':([18,19,20,29,36,55,58,65,67,68,71,72,73,74,75,76,77,85,86,87,117,118,152,168,],[40,40,40,40,40,40,40,40,40,40,40,40,40,-87,-88,-89,-90,40,40,40,-91,-92,40,40,]),'LN':([18,19,20,29,36,55,58,65,67,68,71,72,73,74,75,76,77,85,86,87,117,118,152,168,],[41,41,41,41,41,41,41,41,41,41,41,41,41,-87,-88,-89,-90,41,41,41,-91,-92,41,41,]),'INT':([18,19,20,29,36,55,58,65,67,68,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,107,117,118,152,164,168,181,],[42,42,42,42,42,42,42,42,42,42,42,42,42,-87,-88,-89,-90,42,42,42,42,42,42,42,42,42,140,-91,-92,42,140,42,184,]),'FLOAT':([18,19,20,29,36,55,58,65,67,68,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,107,117,118,152,164,168,181,],[43,43,43,43,43,43,43,43,43,43,43,43,43,-87,-88,-89,-90,43,43,43,43,43,43,43,43,43,141,-91,-92,43,141,43,185,]),'STRING':([18,19,20,29,36,55,58,65,67,68,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,107,117,118,152,164,168,],[44,44,44,61,44,44,100,44,44,44,44,44,44,-87,-88,-89,-90,44,44,44,44,44,44,44,44,44,143,-91,-92,44,143,44,]),'LEER':([18,19,20,29,36,55,58,65,67,68,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,117,118,152,168,],[49,49,49,49,49,49,49,49,49,49,49,49,49,-87,-88,-89,-90,49,49,49,49,49,49,49,49,49,-91,-92,49,49,]),'REAL':([18,19,20,29,36,55,56,58,65,67,68,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,117,118,134,152,161,168,170,],[50,50,50,50,50,50,95,50,50,50,50,50,50,50,-87,-88,-89,-90,50,50,50,50,50,50,50,50,50,-91,-92,95,50,95,50,95,]),'ENTERO':([18,19,20,29,36,55,56,58,65,67,68,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,117,118,134,152,161,168,170,],[51,51,51,51,51,51,94,51,51,51,51,51,51,51,-87,-88,-89,-90,51,51,51,51,51,51,51,51,51,-91,-92,94,51,94,51,94,]),'STR':([18,19,20,29,36,55,56,58,65,67,68,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,117,118,134,152,161,168,170,],[52,52,52,52,52,52,97,52,52,52,52,52,52,52,-87,-88,-89,-90,52,52,52,52,52,52,52,52,52,-91,-92,97,52,97,52,97,]),':':([22,23,24,38,39,42,43,44,45,46,47,82,91,92,98,99,100,101,102,103,104,113,115,116,119,120,121,122,135,149,150,151,153,154,159,162,],[56,-8,-9,-52,-60,-61,-64,-65,-66,-69,-70,-57,-62,-63,-10,-11,-16,-17,-18,-19,134,-68,-50,-51,-53,-54,-55,-56,161,-58,-59,-67,-99,-98,168,170,]),',':([22,23,24,38,39,42,43,44,45,46,47,59,82,90,91,92,94,95,96,97,98,99,100,101,102,103,105,113,115,116,119,120,121,122,126,127,137,138,139,140,141,142,143,144,145,149,150,151,153,154,160,163,166,171,176,],[57,-8,-9,-52,-60,-61,-64,-65,-66,-69,-70,-32,-57,133,-62,-63,-12,-13,-14,-15,-10,-11,-16,-17,-18,-19,136,-68,-50,-51,-53,-54,-55,-56,152,-73,-21,164,-23,-25,-26,-27,-28,-29,-30,-58,-59,-67,-99,-98,-33,-22,-74,-24,-34,]),'ENTONCES':([30,31,32,33,34,35,38,39,42,43,44,45,46,47,82,91,92,110,111,112,113,114,115,116,119,120,121,122,149,150,151,153,154,],[66,-78,-80,-82,-83,-84,-52,-60,-61,-64,-65,-66,-69,-70,-57,-62,-63,-79,-81,-85,-68,-86,-50,-51,-53,-54,-55,-56,-58,-59,-67,-99,-98,]),'OR':([30,31,32,33,34,35,38,39,42,43,44,45,46,47,53,54,69,82,91,92,110,111,112,113,114,115,116,119,120,121,122,149,150,151,153,154,],[67,-78,-80,-82,-83,-84,-52,-60,-61,-64,-65,-66,-69,-70,67,67,67,-57,-62,-63,-79,-81,-85,-68,-86,-50,-51,-53,-54,-55,-56,-58,-59,-67,-99,-98,]),'HACER':([31,32,33,34,35,38,39,42,43,44,45,46,47,53,61,62,63,64,82,91,92,110,111,112,113,114,115,116,119,120,121,122,131,149,150,151,153,154,],[-78,-80,-82,-83,-84,-52,-60,-61,-64,-65,-66,-69,-70,88,-46,-47,-48,-49,-57,-62,-63,-79,-81,-85,-68,-86,-50,-51,-53,-54,-55,-56,157,-58,-59,-67,-99,-98,]),'SIGUIENTE':([31,32,33,34,35,38,39,42,43,44,45,46,47,54,82,91,92,110,111,112,113,114,115,116,119,120,121,122,149,150,151,153,154,],[-78,-80,-82,-83,-84,-52,-60,-61,-64,-65,-66,-69,-70,89,-57,-62,-63,-79,-81,-85,-68,-86,-50,-51,-53,-54,-55,-56,-58,-59,-67,-99,-98,]),')':([31,32,33,34,35,38,39,42,43,44,45,46,47,59,69,70,82,85,90,91,92,94,95,96,97,105,108,110,111,112,113,114,115,116,119,120,121,122,123,124,125,126,127,128,129,149,150,151,153,154,160,166,174,176,],[-78,-80,-82,-62,-63,-52,-60,-61,-64,-65,-66,-69,-70,-32,112,113,-57,-71,132,-62,-63,-12,-13,-14,-15,135,113,-79,-81,-85,-68,-86,-50,-51,-53,-54,-55,-56,149,150,151,-72,-73,153,154,-58,-59,-67,-99,-98,-33,-74,178,-34,]),'AND':([31,32,33,34,35,38,39,42,43,44,45,46,47,82,91,92,110,111,112,113,114,115,116,119,120,121,122,149,150,151,153,154,],[68,-80,-82,-83,-84,-52,-60,-61,-64,-65,-66,-69,-70,-57,-62,-63,68,-81,-85,-68,-86,-50,-51,-53,-54,-55,-56,-58,-59,-67,-99,-98,]),'*':([34,35,38,39,42,43,44,45,46,47,61,62,63,82,91,92,100,101,102,113,115,116,119,120,121,122,149,150,151,153,154,],[-62,-63,78,-60,-61,-64,-65,-66,-69,-70,-65,-62,-63,-57,-62,-63,-65,-62,-63,-68,78,78,-53,-54,-55,-56,-58,-59,-67,-99,-98,]),'/':([34,35,38,39,42,43,44,45,46,47,61,62,63,82,91,92,100,101,102,113,115,116,119,120,121,122,149,150,151,153,154,],[-62,-63,79,-60,-61,-64,-65,-66,-69,-70,-65,-62,-63,-57,-62,-63,-65,-62,-63,-68,79,79,-53,-54,-55,-56,-58,-59,-67,-99,-98,]),'RESTO':([34,35,38,39,42,43,44,45,46,47,61,62,63,82,91,92,100,101,102,113,115,116,119,120,121,122,149,150,151,153,154,],[-62,-63,80,-60,-61,-64,-65,-66,-69,-70,-65,-62,-63,-57,-62,-63,-65,-62,-63,-68,80,80,-53,-54,-55,-56,-58,-59,-67,-99,-98,]),'^':([34,35,38,39,42,43,44,45,46,47,61,62,63,82,91,92,100,101,102,113,115,116,119,120,121,122,149,150,151,153,154,],[-62,-63,81,-60,-61,-64,-65,-66,-69,-70,-65,-62,-63,-57,-62,-63,-65,-62,-63,-68,81,81,-53,-54,-55,-56,-58,-59,-67,-99,-98,]),'!':([34,35,38,39,42,43,44,45,46,47,61,62,63,82,91,92,100,101,102,113,115,116,119,120,121,122,149,150,151,153,154,],[-62,-63,82,-60,-61,-64,-65,-66,-69,-70,-65,-62,-63,-57,-62,-63,-65,-62,-63,-68,82,82,-53,-54,-55,-56,-58,-59,-67,-99,-98,]),'+':([34,35,37,38,39,42,43,44,45,46,47,61,62,63,64,70,82,90,91,92,100,101,102,103,108,113,114,115,116,119,120,121,122,127,128,129,149,150,151,153,154,166,174,],[-62,-63,72,-52,-60,-61,-64,-65,-66,-69,-70,-65,-62,-63,72,72,-57,72,-62,-63,-65,-62,-63,72,72,-68,72,-50,-51,-53,-54,-55,-56,72,72,72,-58,-59,-67,-99,-98,72,72,]),'-':([34,35,37,38,39,42,43,44,45,46,47,61,62,63,64,70,82,90,91,92,100,101,102,103,108,113,114,115,116,119,120,121,122,127,128,129,149,150,151,153,154,166,174,],[-62,-63,73,-52,-60,-61,-64,-65,-66,-69,-70,-65,-62,-63,73,73,-57,73,-62,-63,-65,-62,-63,73,73,-68,73,-50,-51,-53,-54,-55,-56,73,73,73,-58,-59,-67,-99,-98,73,73,]),'>':([34,35,37,38,39,42,43,44,45,46,47,70,82,91,92,113,115,116,119,120,121,122,149,150,151,153,154,],[-62,-63,74,-52,-60,-61,-64,-65,-66,-69,-70,74,-57,-62,-63,-68,-50,-51,-53,-54,-55,-56,-58,-59,-67,-99,-98,]),'<':([34,35,37,38,39,42,43,44,45,46,47,70,82,91,92,113,115,116,119,120,121,122,149,150,151,153,154,],[-62,-63,75,-52,-60,-61,-64,-65,-66,-69,-70,75,-57,-62,-63,-68,-50,-51,-53,-54,-55,-56,-58,-59,-67,-99,-98,]),'IGUAL':([34,35,37,38,39,42,43,44,45,46,47,70,74,75,82,91,92,113,115,116,119,120,121,122,149,150,151,153,154,],[-62,-63,76,-52,-60,-61,-64,-65,-66,-69,-70,76,117,118,-57,-62,-63,-68,-50,-51,-53,-54,-55,-56,-58,-59,-67,-99,-98,]),'DIFERENTE':([34,35,37,38,39,42,43,44,45,46,47,70,82,91,92,113,115,116,119,120,121,122,149,150,151,153,154,],[-62,-63,77,-52,-60,-61,-64,-65,-66,-69,-70,77,-57,-62,-63,-68,-50,-51,-53,-54,-55,-56,-58,-59,-67,-99,-98,]),'BOOLEANO':([56,107,134,161,164,170,],[96,142,96,96,142,96,]),'[':([60,107,164,],[107,107,107,]),']':([107,137,138,139,140,141,142,143,144,145,163,171,],[137,-21,163,-23,-25,-26,-27,-28,-29,-30,-22,-24,]),'FIM':([133,],[159,]),'CONTRARIO':([148,],[165,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prg':([0,],[1,]),'declarations':([0,169,],[2,175,]),'decl':([0,2,169,175,],[3,11,3,11,]),'declV':([0,2,169,175,],[4,4,4,4,]),'declF':([0,2,169,175,],[5,5,5,5,]),'declL':([0,2,169,175,],[6,6,6,6,]),'statements':([2,66,88,157,165,175,],[10,109,130,167,172,179,]),'stat':([2,10,66,88,109,130,157,165,167,172,175,179,],[12,27,12,12,27,27,12,12,27,27,12,27,]),'atrib':([2,10,66,88,89,109,130,157,165,167,172,175,179,],[13,13,13,13,131,13,13,13,13,13,13,13,13,]),'conditions':([2,10,66,88,109,130,157,165,167,172,175,179,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'ciclos':([2,10,66,88,109,130,157,165,167,172,175,179,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'write':([2,10,66,88,109,130,157,165,167,172,175,179,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'vari':([7,],[22,]),'atribD':([7,57,],[23,98,]),'expL':([18,19,20,36,],[30,53,54,69,]),'termoB':([18,19,20,36,67,],[31,31,31,31,110,]),'fatorB':([18,19,20,36,67,68,],[32,32,32,32,32,111,]),'condition':([18,19,20,36,67,68,],[33,33,33,33,33,33,]),'exp':([18,19,20,29,36,55,58,65,67,68,71,85,86,87,152,168,],[37,37,37,64,70,90,103,108,37,37,114,127,128,129,166,174,]),'termo':([18,19,20,29,36,55,58,65,67,68,71,72,73,85,86,87,152,168,],[38,38,38,38,38,38,38,38,38,38,38,115,116,38,38,38,38,38,]),'fator':([18,19,20,29,36,55,58,65,67,68,71,72,73,78,79,80,81,83,84,85,86,87,152,168,],[39,39,39,39,39,39,39,39,39,39,39,39,39,119,120,121,122,123,124,39,39,39,39,39,]),'cast':([18,19,20,29,36,55,58,65,67,68,71,72,73,78,79,80,81,83,84,85,86,87,152,168,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'read':([18,19,20,29,36,55,58,65,67,68,71,72,73,78,79,80,81,83,84,85,86,87,152,168,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'tipocast':([18,19,20,29,36,55,58,65,67,68,71,72,73,78,79,80,81,83,84,85,86,87,152,168,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'op':([37,70,],[71,71,]),'tipo':([56,134,161,170,],[93,160,169,176,]),'parametros':([59,],[105,]),'lista':([60,107,164,],[106,145,145,]),'content_params':([85,],[125,]),'list_params':([85,],[126,]),'elementos':([107,],[138,]),'elemento':([107,164,],[139,171,]),'endcondition':([109,],[146,]),'return':([181,],[183,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prg","S'",1,None,None,None),
  ('prg -> declarations statements','prg',2,'p_prg','yacc.py',11),
  ('declarations -> decl','declarations',1,'p_declarations_1','yacc.py',17),
  ('declarations -> declarations decl','declarations',2,'p_declarations_mult','yacc.py',33),
  ('decl -> declV','decl',1,'p_decl_V','yacc.py',46),
  ('decl -> declF','decl',1,'p_decl_F','yacc.py',50),
  ('decl -> declL','decl',1,'p_decl_L','yacc.py',55),
  ('declV -> VAR vari : tipo','declV',4,'p_declV','yacc.py',62),
  ('vari -> atribD','vari',1,'p_vari_atrib','yacc.py',79),
  ('vari -> ID','vari',1,'p_vari_id','yacc.py',83),
  ('vari -> vari , atribD','vari',3,'p_vari_atribs','yacc.py',88),
  ('vari -> vari , ID','vari',3,'p_vari_ids','yacc.py',92),
  ('tipo -> ENTERO','tipo',1,'p_tipo_int','yacc.py',97),
  ('tipo -> REAL','tipo',1,'p_tipo_REAL','yacc.py',101),
  ('tipo -> BOOLEANO','tipo',1,'p_tipo_BOOL','yacc.py',106),
  ('tipo -> STR','tipo',1,'p_tipo_STRING','yacc.py',110),
  ('atribD -> ID = STRING','atribD',3,'p_atribD_string','yacc.py',114),
  ('atribD -> ID = VERDADERO','atribD',3,'p_atribD_true','yacc.py',119),
  ('atribD -> ID = FALSO','atribD',3,'p_atribD_false','yacc.py',124),
  ('atribD -> ID = exp','atribD',3,'p_atribD','yacc.py',129),
  ('declL -> LISTA ID = lista','declL',4,'p_declL','yacc.py',138),
  ('lista -> [ ]','lista',2,'p_lista_vazia','yacc.py',143),
  ('lista -> [ elementos ]','lista',3,'p_lista_elem','yacc.py',147),
  ('elementos -> elemento','elementos',1,'p_elementos_1','yacc.py',151),
  ('elementos -> elementos , elemento','elementos',3,'p_elementos_mult','yacc.py',155),
  ('elemento -> INT','elemento',1,'p_elemento_INT','yacc.py',159),
  ('elemento -> FLOAT','elemento',1,'p_elemento_FLOAT','yacc.py',164),
  ('elemento -> BOOLEANO','elemento',1,'p_elemento_BOOL','yacc.py',169),
  ('elemento -> STRING','elemento',1,'p_elemento_STRING','yacc.py',174),
  ('elemento -> ID','elemento',1,'p_elemento_ID','yacc.py',179),
  ('elemento -> lista','elemento',1,'p_elemento_lista','yacc.py',184),
  ('declF -> FUNCION ID ( parametros ) : tipo declarations statements DEVUELVE return .','declF',12,'p_declF_parametros','yacc.py',192),
  ('parametros -> <empty>','parametros',0,'p_parametros_0','yacc.py',205),
  ('parametros -> ID : tipo','parametros',3,'p_parametros_1','yacc.py',212),
  ('parametros -> parametros , ID : tipo','parametros',5,'p_parametros_mult','yacc.py',221),
  ('return -> INT','return',1,'p_return_INT','yacc.py',230),
  ('return -> ID','return',1,'p_return_ID','yacc.py',234),
  ('return -> FLOAT','return',1,'p_return_FLOAT','yacc.py',238),
  ('return -> VERDADERO','return',1,'p_return_TRUE','yacc.py',242),
  ('return -> FALSO','return',1,'p_return_FALSE','yacc.py',246),
  ('statements -> stat','statements',1,'p_statements_1','yacc.py',254),
  ('statements -> statements stat','statements',2,'p_statements_mult','yacc.py',258),
  ('stat -> atrib ;','stat',2,'p_stat_atrib','yacc.py',262),
  ('stat -> conditions','stat',1,'p_stat_conditions','yacc.py',266),
  ('stat -> ciclos','stat',1,'p_stat_ciclos','yacc.py',270),
  ('stat -> write','stat',1,'p_stat_write','yacc.py',274),
  ('atrib -> ID = STRING','atrib',3,'p_atrib_string','yacc.py',281),
  ('atrib -> ID = VERDADERO','atrib',3,'p_atrib_true','yacc.py',288),
  ('atrib -> ID = FALSO','atrib',3,'p_atrib_false','yacc.py',297),
  ('atrib -> ID = exp','atrib',3,'p_atrib','yacc.py',306),
  ('exp -> exp + termo','exp',3,'p_exp_soma','yacc.py',323),
  ('exp -> exp - termo','exp',3,'p_exp_sub','yacc.py',336),
  ('exp -> termo','exp',1,'p_exp_termo','yacc.py',346),
  ('termo -> termo * fator','termo',3,'p_termo_mul','yacc.py',350),
  ('termo -> termo / fator','termo',3,'p_termo_div','yacc.py',361),
  ('termo -> termo RESTO fator','termo',3,'p_termo_resto','yacc.py',371),
  ('termo -> termo ^ fator','termo',3,'p_termo_pot','yacc.py',381),
  ('termo -> termo !','termo',2,'p_termo_factorial','yacc.py',397),
  ('termo -> EXP ( fator )','termo',4,'p_termo_exp','yacc.py',407),
  ('termo -> LN ( fator )','termo',4,'p_termo_ln','yacc.py',420),
  ('termo -> fator','termo',1,'p_termo_fator','yacc.py',432),
  ('fator -> INT','fator',1,'p_fator_INT','yacc.py',436),
  ('fator -> VERDADERO','fator',1,'p_fator_VERDADERO','yacc.py',440),
  ('fator -> FALSO','fator',1,'p_fator_FALSO','yacc.py',444),
  ('fator -> FLOAT','fator',1,'p_fator_FLOAT','yacc.py',448),
  ('fator -> STRING','fator',1,'p_fator_STRING','yacc.py',452),
  ('fator -> ID','fator',1,'p_fator_ID','yacc.py',456),
  ('fator -> ID ( content_params )','fator',4,'p_fator_FUNC','yacc.py',465),
  ('fator -> ( exp )','fator',3,'p_fator_exp','yacc.py',513),
  ('fator -> cast','fator',1,'p_fator_cast','yacc.py',517),
  ('fator -> read','fator',1,'p_fator_read','yacc.py',521),
  ('content_params -> <empty>','content_params',0,'p_content_paramns_0','yacc.py',525),
  ('content_params -> list_params','content_params',1,'p_content_paramns_1','yacc.py',529),
  ('list_params -> exp','list_params',1,'p_params_function_1','yacc.py',533),
  ('list_params -> list_params , exp','list_params',3,'p_params_function_mult','yacc.py',537),
  ('conditions -> SI expL ENTONCES statements endcondition','conditions',5,'p_conditions_si','yacc.py',544),
  ('endcondition -> .','endcondition',1,'p_endcpndition','yacc.py',551),
  ('endcondition -> CASO CONTRARIO statements .','endcondition',4,'p_conditions_si_no','yacc.py',556),
  ('expL -> termoB','expL',1,'p_expL_1','yacc.py',562),
  ('expL -> expL OR termoB','expL',3,'p_expL_mult','yacc.py',566),
  ('termoB -> fatorB','termoB',1,'p_termoB_1','yacc.py',570),
  ('termoB -> termoB AND fatorB','termoB',3,'p_termoB_mult','yacc.py',574),
  ('fatorB -> condition','fatorB',1,'p_fatorB_condition','yacc.py',578),
  ('fatorB -> VERDADERO','fatorB',1,'p_fatorB_VERDADERO','yacc.py',582),
  ('fatorB -> FALSO','fatorB',1,'p_fatorB_FALSE','yacc.py',586),
  ('fatorB -> ( expL )','fatorB',3,'p_fatorB_expL','yacc.py',590),
  ('condition -> exp op exp','condition',3,'p_condition','yacc.py',594),
  ('op -> >','op',1,'p_op_maior','yacc.py',598),
  ('op -> <','op',1,'p_op_menor','yacc.py',602),
  ('op -> IGUAL','op',1,'p_op_IGUAL','yacc.py',606),
  ('op -> DIFERENTE','op',1,'p_op_DIFERENTE','yacc.py',610),
  ('op -> > IGUAL','op',2,'p_op_maiorIGUAL','yacc.py',614),
  ('op -> < IGUAL','op',2,'p_op_menorIGUAL','yacc.py',618),
  ('ciclos -> ENCUANTO expL HACER statements .','ciclos',5,'p_ciclos_while','yacc.py',626),
  ('ciclos -> PARA expL SIGUIENTE atrib .','ciclos',5,'p_ciclos_for_1','yacc.py',631),
  ('ciclos -> PARA expL SIGUIENTE atrib HACER statements .','ciclos',7,'p_ciclos_for_mult','yacc.py',636),
  ('write -> ESCRIBIR ( exp ) ;','write',5,'p_write_r','yacc.py',646),
  ('write -> ESCRIBIR ( exp , FIM : exp ) ;','write',9,'p_write_end','yacc.py',650),
  ('read -> LEER ( exp )','read',4,'p_read_w','yacc.py',654),
  ('cast -> tipocast ( exp )','cast',4,'p_cast_exp','yacc.py',662),
  ('tipocast -> REAL','tipocast',1,'p_tipocast_float','yacc.py',666),
  ('tipocast -> ENTERO','tipocast',1,'p_tipocast_int','yacc.py',670),
  ('tipocast -> STR','tipocast',1,'p_tipocast_string','yacc.py',674),
]
