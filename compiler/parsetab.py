
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND BOOLEANO CASO CONTRARIO DEVUELVE DIFERENTE ENCUANTO ENTER ENTERO ENTONCES ESCRIBIR EXP FALSO FIM FLOAT FUNCION HACER ID IGUAL INT LEER LISTA OR PARA REAL RESTO SI SIGUIENTE STR STRING VAR VERDADEROprg : declarations statementsdeclarations : decldeclarations : declarations decldecl : declVdecl : declFdecl : declLdeclV : VAR vari ':' tipovari : atribDvari : IDvari : vari ',' atribDvari : vari ',' IDtipo : ENTEROtipo : REALtipo : BOOLEANOtipo : STRatribD : ID '=' STRINGatribD : ID '=' VERDADEROatribD : ID '=' FALSOatribD : ID '=' expdeclL : LISTA ID '=' listalista : '[' ']'lista : '[' elementos ']'elementos : elementoelementos : elementos ',' elementoelemento : INTelemento : FLOATelemento : BOOLEANOelemento : STRINGelemento : IDelemento : listadeclF : FUNCION ID '(' parametros ')' ':' tipo declarations statements DEVUELVE return '.'parametros : parametros : ID ':' tipoparametros : parametros ',' ID ':' tiporeturn : INTreturn : IDreturn : FLOATreturn : VERDADEROreturn : FALSOstatements : statstatements : statements statstat : atrib ';'stat : conditionsstat : ciclosstat : writeatrib : ID '=' STRINGatrib : ID '=' VERDADEROatrib : ID '=' FALSOatrib : ID '=' expexp : exp '+' termoexp : exp '-' termoexp : termotermo : termo '*' fatortermo : termo '/' fatortermo : termo RESTO fatortermo : termo '^' fatortermo : termo '!' termo : EXP '(' fator ')'termo : fatorfator : INTfator : VERDADEROfator : FALSOfator : FLOATfator : STRINGfator : IDfator : ID '(' content_params ')' fator : '(' exp ')'fator : castfator : readcontent_params : content_params : list_paramslist_params : explist_params : list_params ',' expconditions : SI expL ENTONCES statements endconditionendcondition : '.'endcondition : CASO CONTRARIO statements '.'expL : termoBexpL : expL OR termoBtermoB : fatorBtermoB : termoB AND fatorBfatorB : conditionfatorB : VERDADEROfatorB : FALSOfatorB : '(' expL ')'condition : exp op expop : '>'op : '<'op : IGUALop : DIFERENTEop : '>' IGUALop : '<' IGUALciclos : ENCUANTO expL HACER statements '.'ciclos : PARA expL SIGUIENTE atrib '.'ciclos : PARA expL SIGUIENTE atrib HACER statements '.'write : ESCRIBIR '(' exp ')' ';'write : ESCRIBIR '(' exp ',' FIM ':' exp ')' ';'read : LEER '(' exp ')'cast : tipocast '(' exp ')'cast : tipocast '(' STRING ')'tipocast : REALtipocast : ENTEROtipocast : STR"
    
_lr_action_items = {'VAR':([0,2,3,4,5,6,11,91,92,93,94,95,104,135,161,167,173,186,],[7,7,-2,-4,-5,-6,-3,-7,-12,-13,-14,-15,-20,-21,-22,7,7,-31,]),'FUNCION':([0,2,3,4,5,6,11,91,92,93,94,95,104,135,161,167,173,186,],[8,8,-2,-4,-5,-6,-3,-7,-12,-13,-14,-15,-20,-21,-22,8,8,-31,]),'LISTA':([0,2,3,4,5,6,11,91,92,93,94,95,104,135,161,167,173,186,],[9,9,-2,-4,-5,-6,-3,-7,-12,-13,-14,-15,-20,-21,-22,9,9,-31,]),'$end':([1,10,12,14,15,16,27,28,144,145,153,154,156,171,175,178,],[0,-1,-40,-43,-44,-45,-41,-42,-74,-75,-92,-93,-95,-94,-76,-96,]),'ID':([2,3,4,5,6,7,8,9,10,11,12,14,15,16,18,19,20,27,28,29,36,54,56,57,58,64,65,66,67,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,91,92,93,94,95,104,105,107,115,116,128,134,135,144,145,149,153,154,155,156,161,162,163,165,166,170,171,173,175,177,178,179,186,],[17,-2,-4,-5,-6,24,25,26,17,-3,-40,-43,-44,-45,44,44,44,-41,-42,44,44,44,97,44,102,44,17,44,44,44,44,44,-86,-87,-88,-89,44,44,44,44,44,44,44,44,17,17,-7,-12,-13,-14,-15,-20,142,17,-90,-91,17,160,-21,-74,-75,44,-92,-93,17,-95,-22,142,17,17,44,17,-94,17,-76,17,-96,180,-31,]),'SI':([2,3,4,5,6,10,11,12,14,15,16,27,28,65,86,91,92,93,94,95,104,107,128,135,144,145,153,154,155,156,161,163,165,170,171,173,175,177,178,186,],[18,-2,-4,-5,-6,18,-3,-40,-43,-44,-45,-41,-42,18,18,-7,-12,-13,-14,-15,-20,18,18,-21,-74,-75,-92,-93,18,-95,-22,18,18,18,-94,18,-76,18,-96,-31,]),'ENCUANTO':([2,3,4,5,6,10,11,12,14,15,16,27,28,65,86,91,92,93,94,95,104,107,128,135,144,145,153,154,155,156,161,163,165,170,171,173,175,177,178,186,],[19,-2,-4,-5,-6,19,-3,-40,-43,-44,-45,-41,-42,19,19,-7,-12,-13,-14,-15,-20,19,19,-21,-74,-75,-92,-93,19,-95,-22,19,19,19,-94,19,-76,19,-96,-31,]),'PARA':([2,3,4,5,6,10,11,12,14,15,16,27,28,65,86,91,92,93,94,95,104,107,128,135,144,145,153,154,155,156,161,163,165,170,171,173,175,177,178,186,],[20,-2,-4,-5,-6,20,-3,-40,-43,-44,-45,-41,-42,20,20,-7,-12,-13,-14,-15,-20,20,20,-21,-74,-75,-92,-93,20,-95,-22,20,20,20,-94,20,-76,20,-96,-31,]),'ESCRIBIR':([2,3,4,5,6,10,11,12,14,15,16,27,28,65,86,91,92,93,94,95,104,107,128,135,144,145,153,154,155,156,161,163,165,170,171,173,175,177,178,186,],[21,-2,-4,-5,-6,21,-3,-40,-43,-44,-45,-41,-42,21,21,-7,-12,-13,-14,-15,-20,21,21,-21,-74,-75,-92,-93,21,-95,-22,21,21,21,-94,21,-76,21,-96,-31,]),'.':([12,14,15,16,27,28,38,39,41,42,43,44,45,46,60,61,62,63,81,89,90,107,111,113,114,117,118,119,120,128,129,144,145,147,148,150,151,152,153,154,156,165,170,171,175,178,180,181,182,183,184,185,],[-40,-43,-44,-45,-41,-42,-52,-59,-60,-63,-64,-65,-68,-69,-46,-47,-48,-49,-57,-61,-62,145,-67,-50,-51,-53,-54,-55,-56,153,154,-74,-75,-58,-66,-98,-99,-97,-92,-93,-95,171,175,-94,-76,-96,-36,186,-35,-37,-38,-39,]),'CASO':([12,14,15,16,27,28,107,144,145,153,154,156,171,175,178,],[-40,-43,-44,-45,-41,-42,146,-74,-75,-92,-93,-95,-94,-76,-96,]),'DEVUELVE':([12,14,15,16,27,28,144,145,153,154,156,171,175,177,178,],[-40,-43,-44,-45,-41,-42,-74,-75,-92,-93,-95,-94,-76,179,-96,]),';':([13,38,39,41,42,43,44,45,46,60,61,62,63,81,89,90,111,113,114,117,118,119,120,130,147,148,150,151,152,176,],[28,-52,-59,-60,-63,-64,-65,-68,-69,-46,-47,-48,-49,-57,-61,-62,-67,-50,-51,-53,-54,-55,-56,156,-58,-66,-98,-99,-97,178,]),'=':([17,24,26,97,],[29,57,59,57,]),'VERDADERO':([18,19,20,29,36,54,57,64,66,67,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,115,116,149,166,179,],[34,34,34,61,34,89,99,89,34,34,89,89,89,-86,-87,-88,-89,89,89,89,89,89,89,89,89,-90,-91,89,89,184,]),'FALSO':([18,19,20,29,36,54,57,64,66,67,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,115,116,149,166,179,],[35,35,35,62,35,90,100,90,35,35,90,90,90,-86,-87,-88,-89,90,90,90,90,90,90,90,90,-90,-91,90,90,185,]),'(':([18,19,20,21,25,29,36,40,44,47,48,49,50,51,54,57,64,66,67,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,115,116,149,166,],[36,36,36,54,58,64,36,82,83,84,85,-100,-101,-102,64,64,64,36,36,64,64,64,-86,-87,-88,-89,64,64,64,64,64,64,64,64,-90,-91,64,64,]),'EXP':([18,19,20,29,36,54,57,64,66,67,70,71,72,73,74,75,76,83,84,85,115,116,149,166,],[40,40,40,40,40,40,40,40,40,40,40,40,40,-86,-87,-88,-89,40,40,40,-90,-91,40,40,]),'INT':([18,19,20,29,36,54,57,64,66,67,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,105,115,116,149,162,166,179,],[41,41,41,41,41,41,41,41,41,41,41,41,41,-86,-87,-88,-89,41,41,41,41,41,41,41,41,138,-90,-91,41,138,41,182,]),'FLOAT':([18,19,20,29,36,54,57,64,66,67,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,105,115,116,149,162,166,179,],[42,42,42,42,42,42,42,42,42,42,42,42,42,-86,-87,-88,-89,42,42,42,42,42,42,42,42,139,-90,-91,42,139,42,183,]),'STRING':([18,19,20,29,36,54,57,64,66,67,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,105,115,116,149,162,166,],[43,43,43,60,43,43,98,43,43,43,43,43,43,-86,-87,-88,-89,43,43,43,43,43,43,126,43,141,-90,-91,43,141,43,]),'LEER':([18,19,20,29,36,54,57,64,66,67,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,115,116,149,166,],[48,48,48,48,48,48,48,48,48,48,48,48,48,-86,-87,-88,-89,48,48,48,48,48,48,48,48,-90,-91,48,48,]),'REAL':([18,19,20,29,36,54,55,57,64,66,67,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,115,116,132,149,159,166,168,],[49,49,49,49,49,49,93,49,49,49,49,49,49,49,-86,-87,-88,-89,49,49,49,49,49,49,49,49,-90,-91,93,49,93,49,93,]),'ENTERO':([18,19,20,29,36,54,55,57,64,66,67,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,115,116,132,149,159,166,168,],[50,50,50,50,50,50,92,50,50,50,50,50,50,50,-86,-87,-88,-89,50,50,50,50,50,50,50,50,-90,-91,92,50,92,50,92,]),'STR':([18,19,20,29,36,54,55,57,64,66,67,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,115,116,132,149,159,166,168,],[51,51,51,51,51,51,95,51,51,51,51,51,51,51,-86,-87,-88,-89,51,51,51,51,51,51,51,51,-90,-91,95,51,95,51,95,]),':':([22,23,24,38,39,41,42,43,44,45,46,81,89,90,96,97,98,99,100,101,102,111,113,114,117,118,119,120,133,147,148,150,151,152,157,160,],[55,-8,-9,-52,-59,-60,-63,-64,-65,-68,-69,-57,-61,-62,-10,-11,-16,-17,-18,-19,132,-67,-50,-51,-53,-54,-55,-56,159,-58,-66,-98,-99,-97,166,168,]),',':([22,23,24,38,39,41,42,43,44,45,46,58,81,88,89,90,92,93,94,95,96,97,98,99,100,101,103,111,113,114,117,118,119,120,123,124,135,136,137,138,139,140,141,142,143,147,148,150,151,152,158,161,164,169,174,],[56,-8,-9,-52,-59,-60,-63,-64,-65,-68,-69,-32,-57,131,-61,-62,-12,-13,-14,-15,-10,-11,-16,-17,-18,-19,134,-67,-50,-51,-53,-54,-55,-56,149,-72,-21,162,-23,-25,-26,-27,-28,-29,-30,-58,-66,-98,-99,-97,-33,-22,-73,-24,-34,]),'ENTONCES':([30,31,32,33,34,35,38,39,41,42,43,44,45,46,81,89,90,108,109,110,111,112,113,114,117,118,119,120,147,148,150,151,152,],[65,-77,-79,-81,-82,-83,-52,-59,-60,-63,-64,-65,-68,-69,-57,-61,-62,-78,-80,-84,-67,-85,-50,-51,-53,-54,-55,-56,-58,-66,-98,-99,-97,]),'OR':([30,31,32,33,34,35,38,39,41,42,43,44,45,46,52,53,68,81,89,90,108,109,110,111,112,113,114,117,118,119,120,147,148,150,151,152,],[66,-77,-79,-81,-82,-83,-52,-59,-60,-63,-64,-65,-68,-69,66,66,66,-57,-61,-62,-78,-80,-84,-67,-85,-50,-51,-53,-54,-55,-56,-58,-66,-98,-99,-97,]),'HACER':([31,32,33,34,35,38,39,41,42,43,44,45,46,52,60,61,62,63,81,89,90,108,109,110,111,112,113,114,117,118,119,120,129,147,148,150,151,152,],[-77,-79,-81,-82,-83,-52,-59,-60,-63,-64,-65,-68,-69,86,-46,-47,-48,-49,-57,-61,-62,-78,-80,-84,-67,-85,-50,-51,-53,-54,-55,-56,155,-58,-66,-98,-99,-97,]),'SIGUIENTE':([31,32,33,34,35,38,39,41,42,43,44,45,46,53,81,89,90,108,109,110,111,112,113,114,117,118,119,120,147,148,150,151,152,],[-77,-79,-81,-82,-83,-52,-59,-60,-63,-64,-65,-68,-69,87,-57,-61,-62,-78,-80,-84,-67,-85,-50,-51,-53,-54,-55,-56,-58,-66,-98,-99,-97,]),')':([31,32,33,34,35,38,39,41,42,43,44,45,46,58,68,69,81,83,88,89,90,92,93,94,95,103,106,108,109,110,111,112,113,114,117,118,119,120,121,122,123,124,125,126,127,147,148,150,151,152,158,164,172,174,],[-77,-79,-81,-61,-62,-52,-59,-60,-63,-64,-65,-68,-69,-32,110,111,-57,-70,130,-61,-62,-12,-13,-14,-15,133,111,-78,-80,-84,-67,-85,-50,-51,-53,-54,-55,-56,147,148,-71,-72,150,151,152,-58,-66,-98,-99,-97,-33,-73,176,-34,]),'AND':([31,32,33,34,35,38,39,41,42,43,44,45,46,81,89,90,108,109,110,111,112,113,114,117,118,119,120,147,148,150,151,152,],[67,-79,-81,-82,-83,-52,-59,-60,-63,-64,-65,-68,-69,-57,-61,-62,67,-80,-84,-67,-85,-50,-51,-53,-54,-55,-56,-58,-66,-98,-99,-97,]),'*':([34,35,38,39,41,42,43,44,45,46,60,61,62,81,89,90,98,99,100,111,113,114,117,118,119,120,126,147,148,150,151,152,],[-61,-62,77,-59,-60,-63,-64,-65,-68,-69,-64,-61,-62,-57,-61,-62,-64,-61,-62,-67,77,77,-53,-54,-55,-56,-64,-58,-66,-98,-99,-97,]),'/':([34,35,38,39,41,42,43,44,45,46,60,61,62,81,89,90,98,99,100,111,113,114,117,118,119,120,126,147,148,150,151,152,],[-61,-62,78,-59,-60,-63,-64,-65,-68,-69,-64,-61,-62,-57,-61,-62,-64,-61,-62,-67,78,78,-53,-54,-55,-56,-64,-58,-66,-98,-99,-97,]),'RESTO':([34,35,38,39,41,42,43,44,45,46,60,61,62,81,89,90,98,99,100,111,113,114,117,118,119,120,126,147,148,150,151,152,],[-61,-62,79,-59,-60,-63,-64,-65,-68,-69,-64,-61,-62,-57,-61,-62,-64,-61,-62,-67,79,79,-53,-54,-55,-56,-64,-58,-66,-98,-99,-97,]),'^':([34,35,38,39,41,42,43,44,45,46,60,61,62,81,89,90,98,99,100,111,113,114,117,118,119,120,126,147,148,150,151,152,],[-61,-62,80,-59,-60,-63,-64,-65,-68,-69,-64,-61,-62,-57,-61,-62,-64,-61,-62,-67,80,80,-53,-54,-55,-56,-64,-58,-66,-98,-99,-97,]),'!':([34,35,38,39,41,42,43,44,45,46,60,61,62,81,89,90,98,99,100,111,113,114,117,118,119,120,126,147,148,150,151,152,],[-61,-62,81,-59,-60,-63,-64,-65,-68,-69,-64,-61,-62,-57,-61,-62,-64,-61,-62,-67,81,81,-53,-54,-55,-56,-64,-58,-66,-98,-99,-97,]),'+':([34,35,37,38,39,41,42,43,44,45,46,60,61,62,63,69,81,88,89,90,98,99,100,101,106,111,112,113,114,117,118,119,120,124,125,126,127,147,148,150,151,152,164,172,],[-61,-62,71,-52,-59,-60,-63,-64,-65,-68,-69,-64,-61,-62,71,71,-57,71,-61,-62,-64,-61,-62,71,71,-67,71,-50,-51,-53,-54,-55,-56,71,71,-64,71,-58,-66,-98,-99,-97,71,71,]),'-':([34,35,37,38,39,41,42,43,44,45,46,60,61,62,63,69,81,88,89,90,98,99,100,101,106,111,112,113,114,117,118,119,120,124,125,126,127,147,148,150,151,152,164,172,],[-61,-62,72,-52,-59,-60,-63,-64,-65,-68,-69,-64,-61,-62,72,72,-57,72,-61,-62,-64,-61,-62,72,72,-67,72,-50,-51,-53,-54,-55,-56,72,72,-64,72,-58,-66,-98,-99,-97,72,72,]),'>':([34,35,37,38,39,41,42,43,44,45,46,69,81,89,90,111,113,114,117,118,119,120,147,148,150,151,152,],[-61,-62,73,-52,-59,-60,-63,-64,-65,-68,-69,73,-57,-61,-62,-67,-50,-51,-53,-54,-55,-56,-58,-66,-98,-99,-97,]),'<':([34,35,37,38,39,41,42,43,44,45,46,69,81,89,90,111,113,114,117,118,119,120,147,148,150,151,152,],[-61,-62,74,-52,-59,-60,-63,-64,-65,-68,-69,74,-57,-61,-62,-67,-50,-51,-53,-54,-55,-56,-58,-66,-98,-99,-97,]),'IGUAL':([34,35,37,38,39,41,42,43,44,45,46,69,73,74,81,89,90,111,113,114,117,118,119,120,147,148,150,151,152,],[-61,-62,75,-52,-59,-60,-63,-64,-65,-68,-69,75,115,116,-57,-61,-62,-67,-50,-51,-53,-54,-55,-56,-58,-66,-98,-99,-97,]),'DIFERENTE':([34,35,37,38,39,41,42,43,44,45,46,69,81,89,90,111,113,114,117,118,119,120,147,148,150,151,152,],[-61,-62,76,-52,-59,-60,-63,-64,-65,-68,-69,76,-57,-61,-62,-67,-50,-51,-53,-54,-55,-56,-58,-66,-98,-99,-97,]),'BOOLEANO':([55,105,132,159,162,168,],[94,140,94,94,140,94,]),'[':([59,105,162,],[105,105,105,]),']':([105,135,136,137,138,139,140,141,142,143,161,169,],[135,-21,161,-23,-25,-26,-27,-28,-29,-30,-22,-24,]),'FIM':([131,],[157,]),'CONTRARIO':([146,],[163,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prg':([0,],[1,]),'declarations':([0,167,],[2,173,]),'decl':([0,2,167,173,],[3,11,3,11,]),'declV':([0,2,167,173,],[4,4,4,4,]),'declF':([0,2,167,173,],[5,5,5,5,]),'declL':([0,2,167,173,],[6,6,6,6,]),'statements':([2,65,86,155,163,173,],[10,107,128,165,170,177,]),'stat':([2,10,65,86,107,128,155,163,165,170,173,177,],[12,27,12,12,27,27,12,12,27,27,12,27,]),'atrib':([2,10,65,86,87,107,128,155,163,165,170,173,177,],[13,13,13,13,129,13,13,13,13,13,13,13,13,]),'conditions':([2,10,65,86,107,128,155,163,165,170,173,177,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'ciclos':([2,10,65,86,107,128,155,163,165,170,173,177,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'write':([2,10,65,86,107,128,155,163,165,170,173,177,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'vari':([7,],[22,]),'atribD':([7,56,],[23,96,]),'expL':([18,19,20,36,],[30,52,53,68,]),'termoB':([18,19,20,36,66,],[31,31,31,31,108,]),'fatorB':([18,19,20,36,66,67,],[32,32,32,32,32,109,]),'condition':([18,19,20,36,66,67,],[33,33,33,33,33,33,]),'exp':([18,19,20,29,36,54,57,64,66,67,70,83,84,85,149,166,],[37,37,37,63,69,88,101,106,37,37,112,124,125,127,164,172,]),'termo':([18,19,20,29,36,54,57,64,66,67,70,71,72,83,84,85,149,166,],[38,38,38,38,38,38,38,38,38,38,38,113,114,38,38,38,38,38,]),'fator':([18,19,20,29,36,54,57,64,66,67,70,71,72,77,78,79,80,82,83,84,85,149,166,],[39,39,39,39,39,39,39,39,39,39,39,39,39,117,118,119,120,121,39,39,39,39,39,]),'cast':([18,19,20,29,36,54,57,64,66,67,70,71,72,77,78,79,80,82,83,84,85,149,166,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'read':([18,19,20,29,36,54,57,64,66,67,70,71,72,77,78,79,80,82,83,84,85,149,166,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'tipocast':([18,19,20,29,36,54,57,64,66,67,70,71,72,77,78,79,80,82,83,84,85,149,166,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'op':([37,69,],[70,70,]),'tipo':([55,132,159,168,],[91,158,167,174,]),'parametros':([58,],[103,]),'lista':([59,105,162,],[104,143,143,]),'content_params':([83,],[122,]),'list_params':([83,],[123,]),'elementos':([105,],[136,]),'elemento':([105,162,],[137,169,]),'endcondition':([107,],[144,]),'return':([179,],[181,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prg","S'",1,None,None,None),
  ('prg -> declarations statements','prg',2,'p_prg','yacc.py',10),
  ('declarations -> decl','declarations',1,'p_declarations_1','yacc.py',16),
  ('declarations -> declarations decl','declarations',2,'p_declarations_mult','yacc.py',32),
  ('decl -> declV','decl',1,'p_decl_V','yacc.py',45),
  ('decl -> declF','decl',1,'p_decl_F','yacc.py',49),
  ('decl -> declL','decl',1,'p_decl_L','yacc.py',54),
  ('declV -> VAR vari : tipo','declV',4,'p_declV','yacc.py',61),
  ('vari -> atribD','vari',1,'p_vari_atrib','yacc.py',78),
  ('vari -> ID','vari',1,'p_vari_id','yacc.py',82),
  ('vari -> vari , atribD','vari',3,'p_vari_atribs','yacc.py',87),
  ('vari -> vari , ID','vari',3,'p_vari_ids','yacc.py',91),
  ('tipo -> ENTERO','tipo',1,'p_tipo_int','yacc.py',96),
  ('tipo -> REAL','tipo',1,'p_tipo_REAL','yacc.py',100),
  ('tipo -> BOOLEANO','tipo',1,'p_tipo_BOOL','yacc.py',105),
  ('tipo -> STR','tipo',1,'p_tipo_STRING','yacc.py',109),
  ('atribD -> ID = STRING','atribD',3,'p_atribD_string','yacc.py',113),
  ('atribD -> ID = VERDADERO','atribD',3,'p_atribD_true','yacc.py',118),
  ('atribD -> ID = FALSO','atribD',3,'p_atribD_false','yacc.py',123),
  ('atribD -> ID = exp','atribD',3,'p_atribD','yacc.py',128),
  ('declL -> LISTA ID = lista','declL',4,'p_declL','yacc.py',137),
  ('lista -> [ ]','lista',2,'p_lista_vazia','yacc.py',142),
  ('lista -> [ elementos ]','lista',3,'p_lista_elem','yacc.py',146),
  ('elementos -> elemento','elementos',1,'p_elementos_1','yacc.py',150),
  ('elementos -> elementos , elemento','elementos',3,'p_elementos_mult','yacc.py',154),
  ('elemento -> INT','elemento',1,'p_elemento_INT','yacc.py',158),
  ('elemento -> FLOAT','elemento',1,'p_elemento_FLOAT','yacc.py',163),
  ('elemento -> BOOLEANO','elemento',1,'p_elemento_BOOL','yacc.py',168),
  ('elemento -> STRING','elemento',1,'p_elemento_STRING','yacc.py',173),
  ('elemento -> ID','elemento',1,'p_elemento_ID','yacc.py',178),
  ('elemento -> lista','elemento',1,'p_elemento_lista','yacc.py',183),
  ('declF -> FUNCION ID ( parametros ) : tipo declarations statements DEVUELVE return .','declF',12,'p_declF_parametros','yacc.py',191),
  ('parametros -> <empty>','parametros',0,'p_parametros_0','yacc.py',204),
  ('parametros -> ID : tipo','parametros',3,'p_parametros_1','yacc.py',211),
  ('parametros -> parametros , ID : tipo','parametros',5,'p_parametros_mult','yacc.py',220),
  ('return -> INT','return',1,'p_return_INT','yacc.py',229),
  ('return -> ID','return',1,'p_return_ID','yacc.py',233),
  ('return -> FLOAT','return',1,'p_return_FLOAT','yacc.py',237),
  ('return -> VERDADERO','return',1,'p_return_TRUE','yacc.py',241),
  ('return -> FALSO','return',1,'p_return_FALSE','yacc.py',245),
  ('statements -> stat','statements',1,'p_statements_1','yacc.py',253),
  ('statements -> statements stat','statements',2,'p_statements_mult','yacc.py',257),
  ('stat -> atrib ;','stat',2,'p_stat_atrib','yacc.py',261),
  ('stat -> conditions','stat',1,'p_stat_conditions','yacc.py',265),
  ('stat -> ciclos','stat',1,'p_stat_ciclos','yacc.py',269),
  ('stat -> write','stat',1,'p_stat_write','yacc.py',273),
  ('atrib -> ID = STRING','atrib',3,'p_atrib_string','yacc.py',280),
  ('atrib -> ID = VERDADERO','atrib',3,'p_atrib_true','yacc.py',287),
  ('atrib -> ID = FALSO','atrib',3,'p_atrib_false','yacc.py',296),
  ('atrib -> ID = exp','atrib',3,'p_atrib','yacc.py',305),
  ('exp -> exp + termo','exp',3,'p_exp_soma','yacc.py',322),
  ('exp -> exp - termo','exp',3,'p_exp_sub','yacc.py',335),
  ('exp -> termo','exp',1,'p_exp_termo','yacc.py',345),
  ('termo -> termo * fator','termo',3,'p_termo_mul','yacc.py',349),
  ('termo -> termo / fator','termo',3,'p_termo_div','yacc.py',360),
  ('termo -> termo RESTO fator','termo',3,'p_termo_resto','yacc.py',370),
  ('termo -> termo ^ fator','termo',3,'p_termo_pot','yacc.py',380),
  ('termo -> termo !','termo',2,'p_termo_factorial','yacc.py',400),
  ('termo -> EXP ( fator )','termo',4,'p_termo_exp','yacc.py',412),
  ('termo -> fator','termo',1,'p_termo_fator','yacc.py',426),
  ('fator -> INT','fator',1,'p_fator_INT','yacc.py',430),
  ('fator -> VERDADERO','fator',1,'p_fator_VERDADERO','yacc.py',434),
  ('fator -> FALSO','fator',1,'p_fator_FALSO','yacc.py',438),
  ('fator -> FLOAT','fator',1,'p_fator_FLOAT','yacc.py',442),
  ('fator -> STRING','fator',1,'p_fator_STRING','yacc.py',446),
  ('fator -> ID','fator',1,'p_fator_ID','yacc.py',450),
  ('fator -> ID ( content_params )','fator',4,'p_fator_FUNC','yacc.py',459),
  ('fator -> ( exp )','fator',3,'p_fator_exp','yacc.py',507),
  ('fator -> cast','fator',1,'p_fator_cast','yacc.py',511),
  ('fator -> read','fator',1,'p_fator_read','yacc.py',515),
  ('content_params -> <empty>','content_params',0,'p_content_paramns_0','yacc.py',519),
  ('content_params -> list_params','content_params',1,'p_content_paramns_1','yacc.py',523),
  ('list_params -> exp','list_params',1,'p_params_function_1','yacc.py',527),
  ('list_params -> list_params , exp','list_params',3,'p_params_function_mult','yacc.py',531),
  ('conditions -> SI expL ENTONCES statements endcondition','conditions',5,'p_conditions_si','yacc.py',538),
  ('endcondition -> .','endcondition',1,'p_endcpndition','yacc.py',545),
  ('endcondition -> CASO CONTRARIO statements .','endcondition',4,'p_conditions_si_no','yacc.py',550),
  ('expL -> termoB','expL',1,'p_expL_1','yacc.py',556),
  ('expL -> expL OR termoB','expL',3,'p_expL_mult','yacc.py',560),
  ('termoB -> fatorB','termoB',1,'p_termoB_1','yacc.py',564),
  ('termoB -> termoB AND fatorB','termoB',3,'p_termoB_mult','yacc.py',568),
  ('fatorB -> condition','fatorB',1,'p_fatorB_condition','yacc.py',572),
  ('fatorB -> VERDADERO','fatorB',1,'p_fatorB_VERDADERO','yacc.py',576),
  ('fatorB -> FALSO','fatorB',1,'p_fatorB_FALSE','yacc.py',580),
  ('fatorB -> ( expL )','fatorB',3,'p_fatorB_expL','yacc.py',584),
  ('condition -> exp op exp','condition',3,'p_condition','yacc.py',588),
  ('op -> >','op',1,'p_op_maior','yacc.py',592),
  ('op -> <','op',1,'p_op_menor','yacc.py',596),
  ('op -> IGUAL','op',1,'p_op_IGUAL','yacc.py',600),
  ('op -> DIFERENTE','op',1,'p_op_DIFERENTE','yacc.py',604),
  ('op -> > IGUAL','op',2,'p_op_maiorIGUAL','yacc.py',608),
  ('op -> < IGUAL','op',2,'p_op_menorIGUAL','yacc.py',612),
  ('ciclos -> ENCUANTO expL HACER statements .','ciclos',5,'p_ciclos_while','yacc.py',620),
  ('ciclos -> PARA expL SIGUIENTE atrib .','ciclos',5,'p_ciclos_for_1','yacc.py',625),
  ('ciclos -> PARA expL SIGUIENTE atrib HACER statements .','ciclos',7,'p_ciclos_for_mult','yacc.py',630),
  ('write -> ESCRIBIR ( exp ) ;','write',5,'p_write_r','yacc.py',640),
  ('write -> ESCRIBIR ( exp , FIM : exp ) ;','write',9,'p_write_end','yacc.py',644),
  ('read -> LEER ( exp )','read',4,'p_read_w','yacc.py',648),
  ('cast -> tipocast ( exp )','cast',4,'p_cast_exp','yacc.py',656),
  ('cast -> tipocast ( STRING )','cast',4,'p_cast_string','yacc.py',660),
  ('tipocast -> REAL','tipocast',1,'p_tipocast_float','yacc.py',664),
  ('tipocast -> ENTERO','tipocast',1,'p_tipocast_int','yacc.py',668),
  ('tipocast -> STR','tipocast',1,'p_tipocast_string','yacc.py',672),
]
